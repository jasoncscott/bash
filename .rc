# =============================================================================
# .rc
# =============================================================================

# =============================================================================
# VARIABLES
# =============================================================================

# Path to Readline run commands (init) file
if [ -f ${HOME}/Documents/shell/inputrc ]; then
    export INPUTRC=${HOME}/Documents/shell/inputrc
fi

# Path to VI run commands file
if [ -f ${HOME}/Documents/shell/vimrc ]; then
    export MYVIMRC=${HOME}/Documents/shell/vimrc
fi

# Path to Python startup file
if [ -f ${HOME}/Documents/shell/pythonstartup ]; then
    export PYTHONSTARTUP=${HOME}/Documents/shell/pythonstartup
fi

# Enabling symlinks in Git Bash for Windows
export MSYS=winsymlinks:nativestrict
export LOCATION='home'  # adl, cave, hyd, kao, kl, la, lon, mtl, mum, ny, syd, tor, van
export EDITOR='vi'

# History
export HISTCONTROL=erasedups
export HISTIGNORE='&:ls:[bf]g;exit'
export HISTTIMEFORMAT='%F %T '

# Debug
#export LD_DEBUG=libs


# =============================================================================
# SOFTWARE-SPECIFIC VARIABLES
# =============================================================================

# AUTODESK, INC.
# Maya
export MAYA_DISABLE_CER=true  # Disable customer error reporting
export MAYA_DISABLE_CLIC_IPM=true  # Disable cloud login utilities
export MAYA_DISABLE_CIP=true  # Avoid fatal crash on startup

# FOUNDRY
# Nuke
#export NUKE_FONT_PATH=${HOME}/.fonts/

# SIDE EFFECTS SOFTWARE, INC.
# Houdini
export HOUDINI_VERBOSE_ERROR=true
export HOUDINI_ANONYMOUS_STATISTICS=false
#export HOUDINI_OUTLINEFONT_PATH=@:${HOME}/.fonts/

# VIDEO COPILOT
# Optical Flares
export OPTICAL_FLARES_VERBOSE_CONSOLE=1


# =============================================================================
# INPUTRC (Readline init file)
# =============================================================================

# Source only if interactive shell (test special parameter for "i" option)
if [[ $- == *i* ]]; then
    bind -f ${INPUTRC}
fi


# =============================================================================
# COLORS
# =============================================================================

if [ -f ${HOME}/Documents/shell/shell_colors ]; then
    source ${HOME}/Documents/shell/shell_colors
fi

if [ -f ${HOME}/Documents/shell/tput_colors ]; then
    source ${HOME}/Documents/shell/tput_colors
fi


# =============================================================================
# GIT
# =============================================================================

# Windows:  /c/Program\ Files/Git/etc/profile.d/git-prompt.sh
# bash:  /usr/share/git-core/contrib/completion/git-prompt.sh
if [ -f /c/Program\ Files/Git/etc/profile.d/git-prompt.sh ]; then
    export GIT_PS1_DESCRIBE_STYLE='describe'
    export GIT_PS1_SHOWUPSTREAM='verbose'
    export GIT_PS1_SHOWDIRTYSTATE=true
    export GIT_PS1_SHOWSTASHSTATE=true
    export GIT_PS1_SHOWUNTRACKEDFILES=true
    export GIT_PS1_SHOWCOLORHINTS=true
    source /c/Program\ Files/Git/etc/profile.d/git-prompt.sh
fi


# =============================================================================
# LESS
# =============================================================================

# Due to desire to use external commands in LESS environment variables (e.g.,
# `tput`), source own file
if [ -f ${HOME}/Documents/shell/lessrc ]; then
    source ${HOME}/Documents/shell/lessrc  # Custom name following 'rc' files
fi


# =============================================================================
# PROMPT
# =============================================================================

if [ -f ${HOME}/Documents/shell/prompt ]; then
    source ${HOME}/Documents/shell/prompt
fi


# =============================================================================
# ALIASES
# =============================================================================

# Source personal aliases
if [ -f ${HOME}/Documents/shell/aliases ]; then
    source ${HOME}/Documents/shell/aliases
fi


# =============================================================================
# STARTUP
# =============================================================================

# For Interactive Shells
if [[ $- == *i* ]]; then
    printf '\n'

    # System Information
    printf ${On_Red}${BIBlack}'System Information'${Color_Off}
    printf '\n'
    pprintvar 'MSYSTEM'
    pprintvar 'MSYSTEM_CARCH'
    pprintvar 'MSYSTEM_CHOST'
    pprintvar 'MACHTYPE'
    pprintvar 'PROCESSOR_ARCHITECTURE'
    pprintvar 'PROCESSOR_IDENTIFIER'
    pprintvar 'PROCESSOR_REVISION'
    pprintvar 'PROCESSOR_LEVEL'
    pprintvar 'NUMBER_OF_PROCESSORS'

    # OS Information
    printf '\n'
    printf ${On_Yellow}${BIBlack}'OS Information'${Color_Off}
    printf '\n'
    pprintvar 'OS'
    pprintvar 'OSTYPE'

    printf 'Current OS Options (${MSYS}):'
    # Choose one of the next two lines
    printf ' '${MSYS}
    #printf '\n'${MSYS} | sed 's|:|\n|g' | sed 's|^|    |'
    printf '\n\n'

    # Shell Information
    printf ${On_Green}${BIBlack}'Shell Information'${Color_Off}
    printf '\n'
    printf 'Current Shell Options (${SHELLOPTS}):'
    # Choose one of the next two lines
    printf ' '${SHELLOPTS}
    #printf '\n'${SHELLOPTS} | sed 's|:|\n|g' | sed 's|^|    |'
    printf '\n(Same as Special Variables ($-): '$-')'
    printf '\n\n'

    # Bash Information
    printf ${On_Blue}${BIBlack}'Bash Information'${Color_Off}
    printf '\n'
    pprintvar 'BASH_VERSION'
    printf 'Current Bash Options (${BASHOPTS}):'
    # Choose one of the next two lines
    printf ' '${BASHOPTS}
    #printf '\n'${BASHOPTS} | sed 's|:|\n|g' | sed 's|^|    |'
    printf '\n\n'

    # Users
    printf ${On_IWhite}${BIBlack}'Users:'${Color_Off}
    printf '\n'
    users | sed 's| |\n|g' | uniq | sed 's|^|   |'
fi
